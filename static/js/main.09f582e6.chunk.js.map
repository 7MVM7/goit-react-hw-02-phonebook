{"version":3,"sources":["Components/ContactsForm/ContactsForm.styled.jsx","Components/ContactsForm/ContactsForm.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactsList/ContactsList.styled.jsx","Components/ContactsList/ContactsList.jsx","Components/App.jsx","index.js"],"names":["MyForm","styled","form","initialState","name","number","ContactsForm","state","change","e","currentTarget","value","setState","submit","preventDefault","props","onHandleSubmit","reset","this","onSubmit","onChange","type","placeholder","pattern","title","required","Component","MyLabel","label","Filter","filtered","MyList","ul","ContactsList","contacts","deleteContact","map","id","className","onClick","App","filter","onHandleSubmitContact","addContact","uuidv4","find","contact","toLowerCase","alert","onDeleteContact","prev","item","changeFilterInput","target","onFilteredContacts","trim","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09f582e6.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nexport const MyForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n    margin-right: auto;\n  width: 310px;\n  height: 250px;\n  border: 2px solid darkgrey;\n  border-radius: 5px;\n  padding: 15px;\n  background-color: snow;\n\n label{\n\n\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.18;\n}\ninput{\n  padding: 10px;\n  border: 2px solid #00e45f;\n  border-radius: 15px;\n  font-size: 18px;\n  font-weight: 500;\n  width: 250px;\n  font-size: 14px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n}\n  button{\n    \n    margin-left: auto;\n    margin-right: auto;\n  font-size: 16px;\n  width: 150px;\n  padding: 4px;\n  border: 2px solid darkgrey;\n  border-radius: 4px;\n  background-color: darkgrey;\n  margin-top: 20px;\n  cursor: pointer;\n}\n`\n\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { MyForm } from './ContactsForm.styled'\nconst initialState = {\n    name: '',\n    number:''\n}\nexport default class ContactsForm extends Component {\n    state = {\n        name: '',\n        number:''\n    }\n    change = (e) => {\n        const { name, value } = e.currentTarget;\n        this.setState({[name]:value})\n    }\n    submit = (e) => {\n        e.preventDefault();\n        this.props.onHandleSubmit(this.state);\n        this.reset()\n    }\n\n    reset = () => {\n        this.setState({...initialState})\n    }\n    render() {\n        const { name, number } = this.state;\n        return (\n            <MyForm onSubmit={this.submit}>\n                <label>\n                    Name\n                <input\n                    onChange={this.change}\n  type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    placeholder='Enter your name'\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n  required\n/>Number\n                </label>\n                \n                <label>\n                <input\n                    onChange={this.change}\n                    placeholder='Enter your phone number'\n\n  type=\"tel\"\n                    name=\"number\"\n                                        value={number}\n\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n  required\n                />\n                </label>\n                <button type='submit'>Add contact</button>\n            </MyForm>\n        )\n    }\n}\n\nContactsForm.propTypes = {\n    onHandleSubmit:PropTypes.func.isRequired,\n}\n\n\n","import styled from '@emotion/styled';\nexport const MyLabel = styled.label`\n\n  display: flex;\n  flex-direction: column;\n  font-family: \"Arial\";\n  font-weight: 700;\n  font-size: 15px;\n  line-height: 1.14;\n  margin-top: 15px;\n  margin-left: 20px;\n\n    input{\n      \n  width: 300px;\n  border: 4px solid #00ffe5;\n  border-radius: 15px ;\n\n  padding: 8px;\n  margin-top: 8px;\n}\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { MyLabel } from './Filter.styled'\nconst Filter = ({filtered, value}) => {\n    return (\n        <MyLabel>\n            Find contacts by name\n            <input type='text' name='filter' value={value} onChange={filtered}/>\n        </MyLabel>\n    )\n}\n\nFilter.propTypes = {\n    filtered:PropTypes.func.isRequired,\n    value:PropTypes.string.isRequired,\n}\n\nexport default Filter\n\n","import styled from '@emotion/styled';\nexport const MyList = styled.ul`\npadding: 0;\n    .contact {\n      margin-left: 20px;\n\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  font-weight: 400;\n  line-height: 1.18;\n  margin-bottom: 8px;\n}\n.buttonDelete {\n  \n  margin-left: 10px;\n  border: 2px solid red;\n  font-size: 13px;\n  font-weight: 700;\n  border-radius: 4px;\n  background-color: #ffae00;\n  color: black;\n  cursor: pointer;\n}\n\n`","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport { MyList } from './ContactsList.styled';\nconst ContactsList = ({contacts, deleteContact}) => {\n    return (\n        <MyList>\n            {contacts.map(({ name, number, id }) => (\n                <li className='contact' key={id}>\n                   \n                     <p>\n            {name}: {number}\n          </p>\n          <button\n            className='buttonDelete'\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n          >\n            Delete\n          </button>\n                </li>\n            ))}\n        </MyList>\n    );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number:PropTypes.string,\n      id:PropTypes.string,\n      })\n    ),\n    deleteContact:PropTypes.func.isRequired,\n}\n\nexport default ContactsList;","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport ContactsForm from './ContactsForm/ContactsForm'\nimport Filter from './Filter/Filter'\nimport ContactsList from './ContactsList/ContactsList'\n\n\nexport default class App extends Component {\n    state = {\n        contacts: [{name:'Vlad',number:'+380666506650',id:'1'},{name:'Yans',number:'+380633590900',id:'2'},{name:'Bob',number:'+38050077789',id:'3'},{name:'CIA',number:'+16102347212',id:'4'}],\n        filter:''\n    }\n\n    onHandleSubmitContact = ({name,number}) => {\n        const addContact = ({\n            id: uuidv4(),\n            name,\n            number\n        })\n\n        this.state.contacts.find(contact => contact.name.toLowerCase() === addContact.name.toLowerCase()) ? alert(`${name} is already in contacts`) : this.setState(({ contacts }) => ({\n            contacts: [addContact, ...contacts]\n        }))\n\n    }\n\n    onDeleteContact = (id) => {\n        this.setState((prev) => ({\n            contacts: prev.contacts.filter(item => item.id !== id)\n        }))\n    }\n\n      changeFilterInput = e => {\n    this.setState({ filter: e.target.value });\n    };\n    \n  onFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim()),\n    );\n  };\n\n    componentDidMount() {\n        const contacts = localStorage.getItem('contacts')\n        const parsedContacts = JSON.parse(contacts)\n        if (parsedContacts) {\n            this.setState({contacts:parsedContacts})\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n        }\n    }\n\n    render() {\n        const {filter } = this.state;\n        return (\n            <div >\n  <h1 >Phonebook</h1>\n                <ContactsForm onHandleSubmit={this.onHandleSubmitContact}/>\n\n  <h2>Contacts</h2>\n                <Filter value={filter} filtered={this.changeFilterInput}/>\n                <ContactsList deleteContact={this.onDeleteContact} contacts={this.onFilteredContacts()}/>\n</div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App.jsx';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n"],"sourceRoot":""}